edge_starts <- ends(borders_network,
es = E(borders_network),
names = FALSE)[,1]
edge_colors <- V(borders_network)$color[edge_starts]
plot(borders_network,
edge.col = "black",
vertex.label.color = vertex_colors,
vertex.label = vertex_labels,
vertex.shape = "none")
plot(borders_network,
edge.col = "black",
vertex.label.color = vertex_colors,
vertex.label = vertex_labels,
vertex.shape = "none")
library("ggraph")
install.packages("ggraph")
library("ggraph")
ggraph(borders_network)
ggraph(borders_network, layout = "lgl")
ggraph(borders_network, layout = "lgl")
# make network
# borders_net <- network::network(borders_df, multiple = TRUE)
vertex_df <- borders_df |>
filter(continent == "North America") |>
select(country_code, country_name) |>
distinct()
edge_df <- borders_df |>
select(country_code, country_border_code, continent) |>
filter(continent == "North America") |>
distinct()
# borders_network <- simplify(as.network(
#   edge_df, vertices = vertex_df,
#   multiple = TRUE))
borders_network <- igraph::graph_from_data_frame(
d = edge_df,
vertices = vertex_df,
directed = FALSE
)
# make network
# borders_net <- network::network(borders_df, multiple = TRUE)
vertex_df <- borders_df |>
select(country_code, country_name) |>
distinct()
edge_df <- borders_df |>
select(country_code, country_border_code, continent) |>
distinct()
# borders_network <- simplify(as.network(
#   edge_df, vertices = vertex_df,
#   multiple = TRUE))
borders_network <- igraph::graph_from_data_frame(
d = edge_df,
vertices = vertex_df,
directed = FALSE
)
# make plot
vertex_labels <- V(borders_network)$country_code
vertex_colors <- V(borders_network)$continent
edge_starts <- ends(borders_network,
es = E(borders_network),
names = FALSE)[,1]
edge_colors <- V(borders_network)$color[edge_starts]
plot(borders_network,
edge.col = "black",
vertex.label.color = vertex_colors,
vertex.label = vertex_labels,
vertex.shape = "none")
# make plot
vertex_labels <- V(borders_network)$country_code
vertex_colors <- V(borders_network)$continent
edge_starts <- ends(borders_network,
es = E(borders_network),
names = FALSE)[,1]
edge_colors <- V(borders_network)$color[edge_starts]
plot(borders_network,
edge.col = "black",
vertex.label.color = continent,
vertex.label = vertex_labels,
vertex.shape = "none")
# make plot
vertex_labels <- V(borders_network)$country_code
vertex_colors <- V(borders_network)$continent
edge_starts <- ends(borders_network,
es = E(borders_network),
names = FALSE)[,1]
edge_colors <- V(borders_network)$color[edge_starts]
plot(borders_network,
edge.col = "black",
vertex.label.color = vertex_colors,
vertex.label = vertex_labels,
vertex.shape = "none")
V(borders_network)
Q <- V(borders_network)
str(Q)
plot(borders_network,
edge.col = "black",
vertex.label.color = vertex_colors,
vertex.label = vertex_labels,
vertex.shape = "none")
#| message: false
#| warning: false
library("igraph")
# library("GGally") # for ggnet package to graph networks
library("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
#| message: false
#| warning: false
borders_df <- readxl::read_xlsx("borders.xlsx")
# make network
# borders_net <- network::network(borders_df, multiple = TRUE)
vertex_df <- borders_df |>
select(country_code, country_name) |>
distinct()
edge_df <- borders_df |>
select(country_code, country_border_code, continent) |>
distinct()
# borders_network <- simplify(as.network(
#   edge_df, vertices = vertex_df,
#   multiple = TRUE))
borders_network <- igraph::graph_from_data_frame(
d = edge_df,
vertices = vertex_df,
directed = FALSE
)
# make plot
vertex_labels <- V(borders_network)$country_code
vertex_colors <- V(borders_network)$continent
edge_starts <- ends(borders_network,
es = E(borders_network),
names = FALSE)[,1]
edge_colors <- V(borders_network)$color[edge_starts]
plot(borders_network,
edge.col = "black",
vertex.label.color = vertex_colors,
vertex.label = vertex_labels,
vertex.shape = "none")
#| message: false
#| warning: false
library("igraph")
library("GGally") # for ggnet package to graph networks
library("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
# make network
# borders_net <- network::network(borders_df, multiple = TRUE)
vertex_df <- borders_df |>
select(country_code, country_name) |>
distinct()
edge_df <- borders_df |>
select(country_code, country_border_code, continent) |>
distinct()
borders_network <- simplify(as.network(
edge_df, vertices = vertex_df,
multiple = TRUE))
# make network
# borders_net <- network::network(borders_df, multiple = TRUE)
vertex_df <- borders_df |>
select(country_code, country_name) |>
distinct()
edge_df <- borders_df |>
select(country_code, country_border_code, continent) |>
distinct()
# borders_network <- simplify(as.network(
#   edge_df, vertices = vertex_df,
#   multiple = TRUE))
borders_network <- igraph::graph_from_data_frame(
d = edge_df,
vertices = vertex_df,
directed = FALSE
)
# make plot
# https://briatte.github.io/ggnet/#example-4-french-mps-on-twitter
ggnet2(borders_network)
# make plot
vertex_labels <- V(borders_network)$country_code
vertex_colors <- V(borders_network)$continent
edge_starts <- ends(borders_network,
es = E(borders_network),
names = FALSE)[,1]
edge_colors <- V(borders_network)$color[edge_starts]
plot(borders_network,
edge.col = "black",
vertex.label.color = vertex_colors,
vertex.label = vertex_labels,
vertex.shape = "none")
plot(borders_network,
edge.col = "black",
vertex.label.color = vertex_colors,
vertex.label = vertex_labels,
vertex.shape = "none")
View(borders_network)
?V
str(Q)
str(V(borders_network))
View(edge_df)
View(vertex_df)
# make network
# borders_net <- network::network(borders_df, multiple = TRUE)
vertex_df <- borders_df |>
select(country_code, country_name, continent) |>
distinct()
edge_df <- borders_df |>
select(country_code, country_border_code, continent) |>
distinct()
# borders_network <- simplify(as.network(
#   edge_df, vertices = vertex_df,
#   multiple = TRUE))
borders_network <- igraph::graph_from_data_frame(
d = edge_df,
vertices = vertex_df,
directed = FALSE
)
# make plot
vertex_labels <- V(borders_network)$country_code
vertex_colors <- V(borders_network)$continent
edge_starts <- ends(borders_network,
es = E(borders_network),
names = FALSE)[,1]
edge_colors <- V(borders_network)$color[edge_starts]
plot(borders_network,
edge.col = "black",
vertex.color = vertex_colors,
vertex.label.color = "black",
vertex.label = vertex_labels,
vertex.shape = "circle")
table(vertex_colors)
color_palette <- c("red", "orange", "yellow", "green", "blue", "gray50", "purple")
# make plot
vertex_labels <- V(borders_network)$country_code
color_palette <- c("red", "orange", "yellow", "green", "blue", "gray50", "purple")
vertex_colors <- color_palette[V(borders_network)$continent]
edge_starts <- ends(borders_network,
es = E(borders_network),
names = FALSE)[,1]
edge_colors <- V(borders_network)$color[edge_starts]
plot(borders_network,
edge.col = "black",
vertex.color = vertex_colors,
vertex.label.color = "black",
vertex.label = vertex_labels,
vertex.shape = "circle")
# make plot
vertex_labels <- V(borders_network)$country_code
# color_palette <- c("red", "orange", "yellow", "green", "blue", "gray50", "purple")
vertex_colors <- V(borders_network)$continent
edge_starts <- ends(borders_network,
es = E(borders_network),
names = FALSE)[,1]
edge_colors <- V(borders_network)$color[edge_starts]
plot(borders_network,
edge.col = vertex_colors,
vertex.color = vertex_colors,
vertex.label.color = "black",
vertex.label = vertex_labels,
vertex.shape = "circle")
#| message: false
#| warning: false
library("igraph")
library("GGally") # for ggnet package to graph networks
library("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
#| message: false
#| warning: false
# data source: https://github.com/geodatasource/country-borders
# borders_df <- readr::read_csv("https://github.com/geodatasource/country-borders/blob/master/GEODATASOURCE-COUNTRY-BORDERS.CSV")
#| message: false
#| warning: false
borders_df <- readxl::read_xlsx("borders.xlsx")
# make network
# borders_net <- network::network(borders_df, multiple = TRUE)
vertex_df <- borders_df |>
select(country_code, country_name, continent) |>
distinct()
edge_df <- borders_df |>
select(country_code, country_border_code, continent) |>
distinct()
# borders_network <- simplify(as.network(
#   edge_df, vertices = vertex_df,
#   multiple = TRUE))
borders_network <- igraph::graph_from_data_frame(
d = edge_df,
vertices = vertex_df,
directed = FALSE
)
# make plot
# https://briatte.github.io/ggnet/#example-4-french-mps-on-twitter
# ggnet2(borders_network)
# make plot
vertex_labels <- V(borders_network)$country_code
# color_palette <- c("red", "orange", "yellow", "green", "blue", "gray50", "purple")
vertex_colors <- V(borders_network)$continent
edge_starts <- ends(borders_network,
es = E(borders_network),
names = FALSE)[,1]
edge_colors <- V(borders_network)$color[edge_starts]
plot(borders_network,
edge.col = vertex_colors,
vertex.color = vertex_colors,
vertex.label.color = "black",
vertex.label = vertex_labels,
vertex.shape = "circle")
# make plot
vertex_labels <- V(borders_network)$country_code
# color_palette <- c("red", "orange", "yellow", "green", "blue", "gray50", "purple")
vertex_colors <- V(borders_network)$color
edge_starts <- ends(borders_network,
es = E(borders_network),
names = FALSE)[,1]
edge_colors <- V(borders_network)$color[edge_starts]
plot(borders_network,
edge.col = vertex_colors,
vertex.color = vertex_colors,
vertex.label.color = "black",
vertex.label = vertex_labels,
vertex.shape = "circle")
plot(borders_network,
edge.col = vertex_colors,
vertex.color = vertex_colors,
vertex.label.color = "black",
vertex.label = vertex_labels,
vertex.shape = "circle")
str(V(borders_network))
library("ggraph")
ggraph(borders_network)
ggraph(borders_network, layout = "lgl") +
geom_edge_link() + # add edges to the plot
geom_node_point() # add nodes to the plot
ggraph(borders_network, layout = "lgl") +
geom_edge_link(aes(color = continent)) + # add edges to the plot
geom_node_point() # add nodes to the plot
ggraph(borders_network, layout = "lgl") +
geom_edge_link(aes(color = continent)) + # add edges to the plot
geom_node_point(aes(color = continent)) # add nodes to the plot
ggraph(borders_network, layout = "lgl") +
geom_edge_link(aes(color = continent)) +
geom_node_point(aes(color = continent)) +
theme_void()
ggraph(borders_network, layout = "lgl") +
geom_edge_link(aes(color = continent)) +
geom_node_point(aes(color = continent), size = 5) +
geom_node_text(aes(label = country_code),
color = "black", size = 3) +
theme_void()
ggraph(borders_network, layout = "lgl") +
geom_edge_link(aes(color = continent)) +
geom_node_point(aes(color = continent), size = 5) +
geom_node_text(aes(label = continent),
color = "black", size = 3) +
theme_void()
ggraph(borders_network, layout = "lgl") +
geom_edge_link(aes(color = continent)) +
geom_node_point(aes(color = continent), size = 5) +
geom_node_text(aes(label = country_code),
color = "black", size = 3) +
theme_void()
ggraph(borders_network, layout = "lgl") +
geom_edge_link(aes(color = continent)) +
geom_node_point(aes(color = continent), size = 5) +
geom_node_text(aes(label = names),
color = "black", size = 3) +
theme_void()
ggraph(borders_network, layout = "lgl") +
geom_edge_link(aes(color = continent)) +
geom_node_point(aes(color = continent), size = 5) +
# geom_node_text(aes(label = names),
# color = "black", size = 3) +
theme_void()
colnames(borders_network)
#| message: false
#| warning: false
library("igraph")
library("GGally") # for ggnet package to graph networks
library("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
#| message: false
#| warning: false
# data source: https://github.com/geodatasource/country-borders
# borders_df <- readr::read_csv("https://github.com/geodatasource/country-borders/blob/master/GEODATASOURCE-COUNTRY-BORDERS.CSV")
#| message: false
#| warning: false
borders_df <- readxl::read_xlsx("borders.xlsx")
# make network
# borders_net <- network::network(borders_df, multiple = TRUE)
vertex_df <- borders_df |>
select(country_code, country_name, continent) |>
distinct()
#| message: false
#| warning: false
library("igraph")
library("GGally") # for ggnet package to graph networks
library("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
#| message: false
#| warning: false
# data source: https://github.com/geodatasource/country-borders
# borders_df <- readr::read_csv("https://github.com/geodatasource/country-borders/blob/master/GEODATASOURCE-COUNTRY-BORDERS.CSV")
#| message: false
#| warning: false
borders_df <- readxl::read_xlsx("borders.xlsx")
# make network
# borders_net <- network::network(borders_df, multiple = TRUE)
vertex_df <- borders_df |>
select(country_code, country_name, region) |>
distinct()
edge_df <- borders_df |>
select(country_code, country_border_code, region) |>
distinct()
# borders_network <- simplify(as.network(
#   edge_df, vertices = vertex_df,
#   multiple = TRUE))
borders_network <- igraph::graph_from_data_frame(
d = edge_df,
vertices = vertex_df,
directed = FALSE
)
# make plot
# https://briatte.github.io/ggnet/#example-4-french-mps-on-twitter
# ggnet2(borders_network)
ggraph(borders_network, layout = "lgl") +
geom_edge_link(aes(color = region)) +
geom_node_point(aes(color = region), size = 5) +
# geom_node_text(aes(label = names),
# color = "black", size = 3) +
theme_void()
ggraph(borders_network, layout = "lgl") +
geom_edge_link(aes(color = region)) +
geom_node_point(aes(color = region), size = 5) +
geom_node_text(aes(label = country_code),
color = "black", size = 3) +
theme_void()
ggraph(borders_network, layout = "lgl") +
geom_edge_link(aes(color = region)) +
geom_node_point(aes(color = region), size = 5) +
geom_node_text(aes(label = country_code),
color = "black", size = 3) +
theme_void()
ggraph(borders_network, layout = "lgl") +
geom_edge_link(aes(color = region)) +
geom_node_point(aes(color = region), size = 5) +
geom_node_text(aes(label = country_name),
color = "black", size = 3) +
theme_void()
ggraph(borders_network, layout = "lgl") +
geom_edge_link(aes(color = color)) +
geom_node_point(aes(color = color), size = 5) +
geom_node_text(aes(label = country_name),
color = "black", size = 3) +
theme_void()
ggraph(borders_network, layout = "lgl") +
geom_edge_link(aes(color = region)) +
geom_node_point(aes(color = region), size = 5) +
geom_node_text(aes(label = country_name),
color = "black", size = 3) +
theme_void()
ggraph(borders_network, layout = "lgl") +
geom_edge_link(aes(color = region)) +
geom_node_point(aes(color = region), size = 5) +
geom_node_text(aes(label = country_name),
color = "black", size = 3) +
theme_void()
ggraph(borders_network, layout = "lgl") +
geom_edge_link(aes(color = region)) +
geom_node_point(aes(color = region), size = 5) +
geom_node_text(aes(label = country_code),
color = "black",
repel = TRUE,
size = 3) +
theme_void()
ggraph(borders_network, layout = "lgl") +
geom_edge_link(aes(color = region)) +
geom_node_point(aes(color = region), size = 5) +
geom_node_text(aes(label = `country_code`),
color = "black",
repel = TRUE,
size = 3) +
theme_void()
ggraph(borders_network, layout = "lgl") +
geom_edge_link(aes(color = region)) +
geom_node_point(aes(color = region), size = 5) +
geom_node_text(aes(label = country_name),
color = "black",
repel = TRUE,
size = 3) +
theme_void()
# I don't know why "county_name" worked but "county_code" did not
# 'repel' was too powerful with this many nodes
ggraph(borders_network, layout = "lgl") +
geom_edge_link(aes(color = region)) +
geom_node_point(aes(color = region), size = 5) +
geom_node_text(aes(label = country_name),
color = "black",
# repel = TRUE,
size = 3) +
theme_void()
# I don't know why "county_name" worked but "county_code" did not
# 'repel' was too powerful with this many nodes
set.seed(20221106)
ggraph(borders_network, layout = "lgl") +
geom_edge_link(aes(color = region)) +
geom_node_point(aes(color = region), size = 5) +
geom_node_text(aes(label = country_name),
color = "black",
# repel = TRUE,
size = 3) +
theme_void()
set.seed(20221106)
ggraph(borders_network, layout = "lgl") +
geom_edge_link(aes(color = region)) +
geom_node_point(aes(color = region), size = 5) +
geom_node_text(aes(label = country_name),
color = "black",
# repel = TRUE,
size = 3) +
theme_void()
