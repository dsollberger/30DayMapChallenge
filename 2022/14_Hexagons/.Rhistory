main_plot
main_plot <- combined_df |>
filter(avg_rain.x > 5) |>
ggplot() +
geom_point(aes(x = round_x, y = round_y,
color = pct_change) +
scale_color_gradient(name = "percent change",
low = "red", high = "blue") +
# scale_size(range = c(0,3)) +
guides(size = "none") +
labs(title = "Average Rainfall in California",
subtitle = "30 Day Map Challenge, Day 7: Raster",
caption = "Data Source: UC Berkeley Library Geodata\nFile 1: Average Rainfall (1961 to 1900)\nFile 2: Average Rainfall (1971 to 2000)\nMap made by Derek Sollberger",
x = "", y = "") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
legend.position = c(0.7, 0.8),
# legend.title = element_blank(),
panel.background = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(color = "blue", face = "bold",
hjust = 0.5,
size = 20),
plot.subtitle = element_text(color = "red", hjust = 0.5,
size = 15),
plot.caption = element_text(color = "black", hjust = 0.0,
size = 10))
main_plot <- combined_df |>
filter(avg_rain.x > 5) |>
ggplot() +
geom_point(aes(x = round_x, y = round_y,
color = pct_change)) +
scale_color_gradient(name = "percent change",
low = "red", high = "blue") +
# scale_size(range = c(0,3)) +
guides(size = "none") +
labs(title = "Average Rainfall in California",
subtitle = "30 Day Map Challenge, Day 7: Raster",
caption = "Data Source: UC Berkeley Library Geodata\nFile 1: Average Rainfall (1961 to 1900)\nFile 2: Average Rainfall (1971 to 2000)\nMap made by Derek Sollberger",
x = "", y = "") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
legend.position = c(0.7, 0.8),
# legend.title = element_blank(),
panel.background = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(color = "blue", face = "bold",
hjust = 0.5,
size = 20),
plot.subtitle = element_text(color = "red", hjust = 0.5,
size = 15),
plot.caption = element_text(color = "black", hjust = 0.0,
size = 10))
main_plot
main_plot <- combined_df |>
filter(avg_rain.x > 5) |>
ggplot() +
geom_point(aes(x = round_x, y = round_y,
color = pct_change, size = 10)) +
scale_color_gradient(name = "percent change",
low = "red", high = "blue") +
# scale_size(range = c(0,3)) +
guides(size = "none") +
labs(title = "Average Rainfall in California",
subtitle = "30 Day Map Challenge, Day 7: Raster",
caption = "Data Source: UC Berkeley Library Geodata\nFile 1: Average Rainfall (1961 to 1900)\nFile 2: Average Rainfall (1971 to 2000)\n(and then I calculated the difference in averages)\nMap made by Derek Sollberger",
x = "", y = "") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
legend.position = c(0.7, 0.8),
# legend.title = element_blank(),
panel.background = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(color = "blue", face = "bold",
hjust = 0.5,
size = 20),
plot.subtitle = element_text(color = "red", hjust = 0.5,
size = 15),
plot.caption = element_text(color = "black", hjust = 0.0,
size = 10))
main_plot
main_plot <- combined_df |>
filter(avg_rain.x > 5) |>
ggplot() +
geom_point(aes(x = round_x, y = round_y,
color = pct_change, size = 10)) +
scale_color_gradient(name = "percent change",
low = "red", high = "blue") +
# scale_size(range = c(0,3)) +
guides(size = "none") +
labs(title = "Average Rainfall in California",
subtitle = "30 Day Map Challenge, Day 7: Raster",
caption = "Data Source: UC Berkeley Library Geodata\nFile 1: Average Rainfall (1961 to 1900)\nFile 2: Average Rainfall (1971 to 2000)\n(and then I calculated the difference in averages)\nMap made by Derek Sollberger",
x = "", y = "") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
legend.key.size = unit(100, 'px'),
legend.position = c(0.7, 0.8),
legend.title = element_text(color = "blue",
size = 30),
panel.background = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(color = "blue", face = "bold",
hjust = 0.5,
size = 40),
plot.subtitle = element_text(color = "red",
hjust = 0.5,
size = 30),
plot.caption = element_text(color = "black",
hjust = 0.0, vjust = 20,
size = 20))
main_plot <- combined_df |>
filter(avg_rain.x > 5) |>
ggplot() +
geom_point(aes(x = round_x, y = round_y,
color = pct_change, size = 10)) +
scale_color_gradient(name = "percent change",
low = "red", high = "blue") +
# scale_size(range = c(0,3)) +
guides(size = "none") +
labs(title = "Average Rainfall in California",
subtitle = "30 Day Map Challenge, Day 7: Raster",
caption = "Data Source: UC Berkeley Library Geodata\nFile 1: Average Rainfall (1961 to 1900)\nFile 2: Average Rainfall (1971 to 2000)\n(and then I calculated the difference in averages)\nMap made by Derek Sollberger",
x = "", y = "") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
legend.key.size = unit(3, 'cm'),
legend.position = c(0.7, 0.8),
legend.title = element_text(color = "blue",
size = 30),
panel.background = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(color = "blue", face = "bold",
hjust = 0.5,
size = 40),
plot.subtitle = element_text(color = "red",
hjust = 0.5,
size = 30),
plot.caption = element_text(color = "black",
hjust = 0.0, vjust = 20,
size = 20))
main_plot
main_plot <- combined_df |>
filter(avg_rain.x > 5) |>
ggplot() +
geom_point(aes(x = round_x, y = round_y,
color = pct_change, size = 10)) +
scale_color_gradient(name = "percent change",
low = "red", high = "blue") +
# scale_size(range = c(0,3)) +
guides(size = "none") +
labs(title = "Average Rainfall in California",
subtitle = "30 Day Map Challenge, Day 7: Raster",
caption = "Data Source: UC Berkeley Library Geodata\nFile 1: Average Rainfall (1961 to 1900)\nFile 2: Average Rainfall (1971 to 2000)\n(and then I calculated the difference in averages)\nMap made by Derek Sollberger",
x = "", y = "") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
legend.key.size = unit(2, 'cm'),
legend.position = c(0.7, 0.8),
legend.title = element_text(color = "blue",
size = 30),
panel.background = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(color = "blue", face = "bold",
hjust = 0.5,
size = 40),
plot.subtitle = element_text(color = "red",
hjust = 0.5,
size = 30),
plot.caption = element_text(color = "black",
hjust = 0.0, vjust = 20,
size = 20))
main_plot
#| message: false
#| warning: false
library("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
# load shape file
USA_hex_shp <- st_read("../data/us_states_hexgrid/us_states_hexgrid.shp")
library("sf")
# load shape file
USA_hex_shp <- st_read("../data/us_states_hexgrid/us_states_hexgrid.shp")
# merge data
df <- USA_hex_shp %>%
left_join(custody_disability, by = c("iso3166_2" = "Region"))
# load shape file
USA_hex_shp <- st_read("../data/us_states_hexgrid/us_states_hexgrid.shp")
# load demographics file
custody_disability <- readxl::read_xlsx("custody_disability.xlsx")
# merge data
df <- USA_hex_shp %>%
left_join(custody_disability, by = c("iso3166_2" = "Region"))
View(df)
setwd("~/GitHub/30DayMapChallenge/2022/14_Hexagons")
#| message: false
#| warning: false
library("sf")
library("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
# load shape file
USA_hex_shp <- st_read("../data/us_states_hexgrid/us_states_hexgrid.shp")
# load demographics file
custody_disability <- readxl::read_xlsx("custody_disability.xlsx")
# merge data
df <- USA_hex_shp %>%
left_join(custody_disability, by = c("iso3166_2" = "Region"))
View(df)
# merge data
df <- USA_hex_shp |>
separate(google_nam, into = c("Region", "Country"), by = " ") |>
left_join(custody_disability, by = c("iso3166_2" = "Region"))
# merge data
df <- USA_hex_shp |>
separate(google_nam, into = c("Region", "Country"), by = " ") |>
left_join(custody_disability, by = "Region")
# merge data
df <- USA_hex_shp |>
separate(google_nam, into = c("Region", "Country"), sep = " ") |>
left_join(custody_disability, by = "Region")
# merge data
df <- USA_hex_shp |>
separate(google_nam, into = c("State", "Country"), sep = "(") |>
mutate(Region = stringr::str_trim(State))
# merge data
df <- USA_hex_shp |>
separate(google_nam, into = c("State", "Country"), sep = "\(") |>
# merge data
df <- USA_hex_shp |>
separate(google_nam, into = c("State", "Country"), sep = "(U") |>
mutate(Region = stringr::str_trim(State))
?separate
View(USA_hex_shp)
# merge data
df <- USA_hex_shp |>
separate(google_nam, into = c("State", "Country"), sep = "\\(") |>
mutate(Region = stringr::str_trim(State))
left_join(custody_disability, by = "Region")
# merge data
df <- USA_hex_shp |>
separate(google_nam, into = c("State", "Country"), sep = "\\(") |>
mutate(Region = stringr::str_trim(State)) |>
left_join(custody_disability, by = "Region")
# Calculate the centroid of each hexagon to add the label
# https://stackoverflow.com/questions/49343958/do-the-values-returned-by-rgeosgcentroid-and-sfst-centroid-differ
centers <- data.frame(
st_coordinates(st_centroid(USA_hex_shp$geometry)),
id=USA_hex_shp$iso3166_2)
#| message: false
#| warning: false
library("sf")
library("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
# load shape file
USA_hex_shp <- st_read("../data/us_states_hexgrid/us_states_hexgrid.shp")
# load demographics file
custody_disability <- readxl::read_xlsx("custody_disability.xlsx")
# merge data
df <- USA_hex_shp |>
separate(google_nam, into = c("State", "Country"), sep = "\\(") |>
mutate(Region = stringr::str_trim(State)) |>
left_join(custody_disability, by = "Region")
# Calculate the centroid of each hexagon to add the label
# https://stackoverflow.com/questions/49343958/do-the-values-returned-by-rgeosgcentroid-and-sfst-centroid-differ
centers <- data.frame(
st_coordinates(st_centroid(USA_hex_shp$geometry)),
id=USA_hex_shp$iso3166_2)
df %>%
ggplot() +
geom_sf(aes(fill = Grounds)) +
geom_text(aes(x = X, y = Y, label = id),
data = centers) +
labs(title = "Feeling Blue in the USA",
subtitle = "30 Day Map Challenge Day 8: Blue",
caption = "Data Source: https://ct.counseling.org",
x = "", y = "") +
theme_minimal() +
# theme(legend.position = "right") +
theme(panel.background = element_blank(),
panel.grid.minor = element_blank(),
plot.subtitle = element_text(color = "blue", hjust = 0.53, size = 10),
plot.title = element_text(color = "blue", hjust = 0.55, size = 20)) +
guides(fill = guide_legend(title = "Counseling \nAccess \nRanking"))
df %>%
ggplot() +
geom_sf(aes(fill = Grounds)) +
geom_text(aes(x = X, y = Y, label = id),
data = centers) +
labs(title = "Feeling Blue in the USA",
subtitle = "30 Day Map Challenge Day 8: Blue",
caption = "Data Source: https://ct.counseling.org",
x = "", y = "") +
theme_minimal() +
# theme(legend.position = "right") +
theme(panel.background = element_blank(),
panel.grid.minor = element_blank(),
plot.subtitle = element_text(color = "blue", hjust = 0.53, size = 10),
plot.title = element_text(color = "blue", hjust = 0.55, size = 20)) +
guides(fill = guide_legend(title = "Grounds"))
df %>%
ggplot() +
geom_sf(aes(fill = Grounds)) +
geom_text(aes(x = X, y = Y, label = id),
data = centers) +
labs(title = "2012",
subtitle = "States where Disability is\nGrounds for Termination of Parental Rights",
caption = "Data Source: National Council on Disability",
x = "", y = "") +
theme_minimal() +
# theme(legend.position = "right") +
theme(panel.background = element_blank(),
panel.grid.minor = element_blank(),
plot.subtitle = element_text(color = "blue", hjust = 0.5, size = 10),
plot.title = element_text(color = "blue", hjust = 0.5, size = 20)) +
guides(fill = guide_legend(title = "Grounds"))
df %>%
ggplot() +
geom_sf(aes(fill = Grounds)) +
geom_text(aes(x = X, y = Y, label = id),
data = centers) +
labs(title = "2012",
subtitle = "States where Disability is Grounds\n for Termination of Parental Rights",
caption = "Data Source: National Council on Disability",
x = "", y = "") +
theme_minimal() +
# theme(legend.position = "right") +
theme(panel.background = element_blank(),
panel.grid.minor = element_blank(),
plot.subtitle = element_text(color = "blue", hjust = 0.5, size = 10),
plot.title = element_text(color = "blue", hjust = 0.5, size = 20)) +
guides(fill = guide_legend(title = "Grounds"))
df %>%
ggplot() +
geom_sf(aes(fill = Grounds)) +
geom_text(aes(x = X, y = Y, label = id),
data = centers) +
labs(title = "2012",
subtitle = "States where Disability is Grounds\n for Termination of Parental Rights",
caption = "Data Source: National Council on Disability",
x = "", y = "") +
theme_minimal() +
# theme(legend.position = "right") +
theme(panel.background = element_blank(),
panel.grid.minor = element_blank(),
plot.subtitle = element_text(color = "blue", hjust = 0.5, size = 24),
plot.title = element_text(color = "blue", hjust = 0.5, size = 36)) +
guides(fill = guide_legend(title = "Grounds"))
df %>%
ggplot() +
geom_sf(aes(fill = Grounds)) +
geom_text(aes(x = X, y = Y, label = id),
data = centers) +
labs(title = "2012",
subtitle = "States where Disability is Grounds\n for Termination of Parental Rights",
caption = "Data Source: National Council on Disability",
x = "", y = "") +
theme_minimal() +
# theme(legend.position = "right") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
panel.grid.minor = element_blank(),
plot.subtitle = element_text(color = "blue", hjust = 0.5, size = 24),
plot.title = element_text(color = "blue", hjust = 0.5, size = 36)) +
guides(fill = guide_legend(title = "Grounds"))
p2022 <- df %>%
ggplot() +
geom_sf(aes(fill = Grounds)) +
geom_text(aes(x = X, y = Y, label = id),
data = centers) +
labs(title = "2022",
subtitle = "States where Disability is Grounds\n for Termination of Parental Rights",
caption = "30 Day Map Challenge\nDay 14: Hexagons\nDerek Sollberger",
x = "", y = "") +
theme_minimal() +
# theme(legend.position = "right") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
panel.grid.minor = element_blank(),
plot.subtitle = element_text(color = "blue", hjust = 0.5, size = 24),
plot.title = element_text(color = "blue", hjust = 0.5, size = 36)) +
guides(fill = guide_legend(title = "Grounds"))
p2012 <- df %>%
ggplot() +
geom_sf(aes(fill = Grounds)) +
geom_text(aes(x = X, y = Y, label = id),
data = centers) +
labs(title = "2012",
subtitle = "States where Disability is Grounds\n for Termination of Parental Rights",
caption = "Data Source: National Council on Disability",
x = "", y = "") +
theme_minimal() +
# theme(legend.position = "right") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
panel.grid.minor = element_blank(),
plot.subtitle = element_text(color = "blue", hjust = 0.5, size = 24),
plot.title = element_text(color = "blue", hjust = 0.5, size = 36)) +
guides(fill = guide_legend(title = "Grounds"))
p2012
p2012 <- df %>%
ggplot() +
geom_sf(aes(fill = Grounds)) +
geom_text(aes(x = X, y = Y, label = id),
data = centers) +
labs(title = "2012",
subtitle = "States where Disability is Grounds\n for Termination of Parental Rights",
caption = "Data Source: National Council on Disability",
x = "", y = "") +
theme_minimal() +
# theme(legend.position = "right") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
panel.grid.minor = element_blank(),
plot.subtitle = element_text(color = "blue", hjust = 0.5, size = 16),
plot.title = element_text(color = "blue", hjust = 0.5, size = 24)) +
guides(fill = guide_legend(title = "Grounds"))
p2022 <- df %>%
ggplot() +
geom_sf(aes(fill = Grounds)) +
geom_text(aes(x = X, y = Y, label = id),
data = centers) +
labs(title = "2022",
subtitle = "States where Disability is Grounds\n for Termination of Parental Rights",
caption = "30 Day Map Challenge\nDay 14: Hexagons\nDerek Sollberger",
x = "", y = "") +
theme_minimal() +
# theme(legend.position = "right") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
panel.grid.minor = element_blank(),
plot.subtitle = element_text(color = "blue", hjust = 0.5, size = 16),
plot.title = element_text(color = "blue", hjust = 0.5, size = 24)) +
guides(fill = guide_legend(title = "Grounds"))
p2012
p2012 <- df %>%
ggplot() +
geom_sf(aes(fill = Grounds)) +
geom_text(aes(x = X, y = Y, label = id),
data = centers,
size = 10) +
labs(title = "2012",
subtitle = "States where Disability is Grounds\n for Termination of Parental Rights",
caption = "Data Source: National Council on Disability",
x = "", y = "") +
theme_minimal() +
# theme(legend.position = "right") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
panel.grid.minor = element_blank(),
plot.subtitle = element_text(color = "blue", hjust = 0.5, size = 16),
plot.title = element_text(color = "blue", hjust = 0.5, size = 24)) +
guides(fill = guide_legend(title = "Grounds"))
p2012
p2012 <- df %>%
ggplot() +
geom_sf(aes(fill = Grounds)) +
geom_text(aes(x = X, y = Y, label = id),
data = centers,
size = 2) +
labs(title = "2012",
subtitle = "States where Disability is Grounds\n for Termination of Parental Rights",
caption = "Data Source: National Council on Disability",
x = "", y = "") +
theme_minimal() +
# theme(legend.position = "right") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
panel.grid.minor = element_blank(),
plot.subtitle = element_text(color = "blue", hjust = 0.5, size = 16),
plot.title = element_text(color = "blue", hjust = 0.5, size = 24)) +
guides(fill = guide_legend(title = "Grounds"))
p2012
p2022 <- df %>%
ggplot() +
geom_sf(aes(fill = Grounds)) +
geom_text(aes(x = X, y = Y, label = id),
data = centers,
size = 2) +
labs(title = "2022",
subtitle = "States where Disability is Grounds\n for Termination of Parental Rights",
caption = "30 Day Map Challenge\nDay 14: Hexagons\nDerek Sollberger",
x = "", y = "") +
theme_minimal() +
# theme(legend.position = "right") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
panel.grid.minor = element_blank(),
plot.subtitle = element_text(color = "blue", hjust = 0.5, size = 16),
plot.title = element_text(color = "blue", hjust = 0.5, size = 24)) +
guides(fill = guide_legend(title = "Grounds"))
p2022
