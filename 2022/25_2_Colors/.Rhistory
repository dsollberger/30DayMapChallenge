#| warning: false
library("sf")
library("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
# load shape file(s)
# https://www.naturalearthdata.com/downloads/50m-cultural-vectors/50m-admin-0-countries-2/
countries_shp <- st_read("../data/ne_50m_admin_0_countries/ne_50m_admin_0_countries.shp")
View(countries_shp)
# find total population
sum(countries_shp$POP_EST)
# find half population
half_pop <- sum(countries_shp$POP_EST) / 2
# find total population
sum(countries_shp$POP_EST)
# find half population
half_pop <- sum(countries_shp$POP_EST) / 2
countries_df <- counties_shp |>
arrange(POP_EST, desc = TRUE) |>
mutate(cum_pop = cumsum(POP_EST))
# find total population
sum(countries_shp$POP_EST)
# find half population
half_pop <- sum(countries_shp$POP_EST) / 2
countries_df <- countries_shp |>
arrange(POP_EST, desc = TRUE) |>
mutate(cum_pop = cumsum(POP_EST))
View(countries_df)
# find total population
sum(countries_shp$POP_EST)
# find half population
half_pop <- sum(countries_shp$POP_EST) / 2
countries_df <- countries_shp |>
arrange(POP_EST, desc = FALSE) |>
mutate(cum_pop = cumsum(POP_EST))
?arrange
# find total population
sum(countries_shp$POP_EST)
# find half population
half_pop <- sum(countries_shp$POP_EST) / 2
countries_df <- countries_shp |>
arrange(desc(POP_EST)) |>
mutate(cum_pop = cumsum(POP_EST))
# find total population
sum(countries_shp$POP_EST)
# find half population
half_pop <- sum(countries_shp$POP_EST) / 2
countries_df <- countries_shp |>
arrange(desc(POP_EST)) |>
mutate(cum_pop = cumsum(POP_EST)) |>
mutate(pop_class = cum_pop < half_pop)
# lat_min <- 25.5
# lat_max <- 48.5
# long_min <- -124
# long_max <- -69
countries_df |>
ggplot() +
geom_sf(aes(fill = pop_class), color = "white") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
legend.position = "none",
legend.title = element_blank(),
panel.background = element_rect(fill = "#041E42"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "#041E42")) +
xlim(long_min, long_max) +
ylim(lat_min, lat_max)
# lat_min <- 25.5
# lat_max <- 48.5
# long_min <- -124
# long_max <- -69
countries_df |>
ggplot() +
geom_sf(aes(fill = pop_class), color = "white") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
legend.position = "none",
legend.title = element_blank(),
panel.background = element_rect(fill = "#041E42"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "#041E42"))
# lat_min <- 25.5
# lat_max <- 48.5
# long_min <- -124
# long_max <- -69
countries_df |>
ggplot() +
geom_sf(aes(fill = pop_class), color = "white") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
legend.position = "none",
legend.title = element_blank(),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "white"))
# lat_min <- 25.5
# lat_max <- 48.5
# long_min <- -124
# long_max <- -69
countries_df |>
ggplot() +
geom_sf(aes(fill = pop_class), color = "white") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom",
legend.title = element_blank(),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "white"))
# find total population
sum(countries_shp$POP_EST)
# find half population
half_pop <- sum(countries_shp$POP_EST) / 2
countries_df <- countries_shp |>
arrange(desc(POP_EST)) |>
mutate(cum_pop = cumsum(POP_EST)) |>
mutate(pop_class = ifelse(cum_pop < half_pop,
"half of population",
"another half of population"))
# lat_min <- 25.5
# lat_max <- 48.5
# long_min <- -124
# long_max <- -69
countries_df |>
ggplot() +
geom_sf(aes(fill = pop_class), color = "white") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom",
legend.title = element_blank(),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "white"))
# lat_min <- 25.5
# lat_max <- 48.5
# long_min <- -124
# long_max <- -69
countries_df |>
ggplot() +
geom_sf(aes(fill = pop_class), color = "white") +
scale_fill_manual(values = c("#0F8040", "#801c0F")) +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom",
legend.title = element_blank(),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "white"))
# lat_min <- 25.5
# lat_max <- 48.5
# long_min <- -124
# long_max <- -69
countries_df |>
ggplot() +
geom_sf(aes(fill = pop_class), color = "white") +
labs(title = "The World's Population",
subtitle = "In Two Halves",
caption = "30 Day Map Challenge\,Derek Sollberger") +
# lat_min <- 25.5
# lat_max <- 48.5
# long_min <- -124
# long_max <- -69
countries_df |>
ggplot() +
geom_sf(aes(fill = pop_class), color = "white") +
labs(title = "The World's Population",
subtitle = "In Two Halves",
caption = "30 Day Map Challenge\nDerek Sollberger") +
# https://www.sessions.edu/color-calculator/
scale_fill_manual(values = c("#0F8040", "#801c0F")) +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom",
legend.title = element_blank(),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title = element_text(color = "#801c0F", size = 20),
plot.subtitle = element_text(color = "#0F8040", size = 15),
plot.caption = element_text(color = "#801c0F", hjust = 0, size = 10))
# lat_min <- 25.5
# lat_max <- 48.5
# long_min <- -124
# long_max <- -69
countries_df |>
ggplot() +
geom_sf(aes(fill = pop_class), color = "white") +
labs(title = "The World's Population In Two Halves",
subtitle = "30 Day Map Challenge, Day 25: Two Colors",
caption = "Derek Sollberger") +
# https://www.sessions.edu/color-calculator/
scale_fill_manual(values = c("#0F8040", "#801c0F")) +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom",
legend.title = element_blank(),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title = element_text(color = "#801c0F", size = 20),
plot.subtitle = element_text(color = "#0F8040", size = 15),
plot.caption = element_text(color = "#801c0F", hjust = 0, size = 10))
# find total population
sum(countries_shp$POP_EST)
# find half population
half_pop <- sum(countries_shp$POP_EST) / 2
countries_df <- countries_shp |>
arrange(desc(POP_EST)) |>
mutate(cum_pop = cumsum(POP_EST)) |>
mutate(pop_class = ifelse(cum_pop > half_pop,
"half of population",
"another half of population"))
# lat_min <- 25.5
# lat_max <- 48.5
# long_min <- -124
# long_max <- -69
countries_df |>
ggplot() +
geom_sf(aes(fill = pop_class), color = "white") +
labs(title = "The World's Population In Two Halves",
subtitle = "30 Day Map Challenge, Day 25: Two Colors",
caption = "Derek Sollberger") +
# https://www.sessions.edu/color-calculator/
scale_fill_manual(values = c("#0F8040", "#801c0F")) +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom",
legend.title = element_blank(),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title = element_text(color = "#801c0F", size = 20),
plot.subtitle = element_text(color = "#0F8040", size = 15),
plot.caption = element_text(color = "#801c0F", hjust = 0, size = 10))
# find total population
sum(countries_shp$POP_EST)
# find half population
half_pop <- sum(countries_shp$POP_EST) / 2
countries_df <- countries_shp |>
arrange(desc(POP_EST)) |>
mutate(cum_pop = cumsum(POP_EST)) |>
mutate(pop_class = ifelse(cum_pop < half_pop,
"another half of population",
"half of population"))
# lat_min <- 25.5
# lat_max <- 48.5
# long_min <- -124
# long_max <- -69
countries_df |>
ggplot() +
geom_sf(aes(fill = pop_class), color = "white") +
labs(title = "The World's Population In Two Halves",
subtitle = "30 Day Map Challenge, Day 25: Two Colors",
caption = "Derek Sollberger") +
# https://www.sessions.edu/color-calculator/
scale_fill_manual(values = c("#0F8040", "#801c0F")) +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom",
legend.title = element_blank(),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title = element_text(color = "#801c0F", size = 20),
plot.subtitle = element_text(color = "#0F8040", size = 15),
plot.caption = element_text(color = "#801c0F", hjust = 0, size = 10))
# find total population
sum(countries_shp$POP_EST)
# find half population
half_pop <- sum(countries_shp$POP_EST) / 2
countries_df <- countries_shp |>
arrange(desc(POP_EST)) |>
mutate(cum_pop = cumsum(POP_EST)) |>
mutate(pop_class = ifelse(cum_pop < half_pop,
"another half of population",
"half of population"))
# lat_min <- 25.5
# lat_max <- 48.5
# long_min <- -124
# long_max <- -69
countries_df |>
ggplot() +
geom_sf(aes(fill = pop_class), color = "white") +
labs(title = "The World's Population In Two Halves",
subtitle = "30 Day Map Challenge, Day 25: Two Colors",
caption = "Derek Sollberger") +
# https://www.sessions.edu/color-calculator/
scale_fill_manual(values = c("#0F8040", "#801c0F")) +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom",
legend.title = element_blank(),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title = element_text(color = "#801c0F", size = 20),
plot.subtitle = element_text(color = "#0F8040", size = 15),
plot.caption = element_text(color = "#801c0F", hjust = 0, size = 10))
# find total population
sum(countries_shp$POP_EST)
# find half population
half_pop <- sum(countries_shp$POP_EST) / 2
countries_df <- countries_shp |>
arrange(desc(POP_EST)) |>
mutate(cum_pop = cumsum(POP_EST)) |>
mutate(pop_class = ifelse(cum_pop < half_pop,
"half of population",
"half of population"))
# lat_min <- 25.5
# lat_max <- 48.5
# long_min <- -124
# long_max <- -69
countries_df |>
ggplot() +
geom_sf(aes(fill = pop_class), color = "white") +
labs(title = "The World's Population In Two Halves",
subtitle = "30 Day Map Challenge, Day 25: Two Colors",
caption = "Derek Sollberger") +
# https://www.sessions.edu/color-calculator/
scale_fill_manual(values = c("#0F8040", "#801c0F")) +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom",
legend.title = element_blank(),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title = element_text(color = "#801c0F", size = 20),
plot.subtitle = element_text(color = "#0F8040", size = 15),
plot.caption = element_text(color = "#801c0F", hjust = 0, size = 10))
# find total population
sum(countries_shp$POP_EST)
# find half population
half_pop <- sum(countries_shp$POP_EST) / 2
countries_df <- countries_shp |>
arrange(desc(POP_EST)) |>
mutate(cum_pop = cumsum(POP_EST)) |>
mutate(pop_class = ifelse(cum_pop < half_pop,
"half of population",
"half of population"))
# find total population
sum(countries_shp$POP_EST)
# find half population
half_pop <- sum(countries_shp$POP_EST) / 2
countries_df <- countries_shp |>
arrange(desc(POP_EST)) |>
mutate(cum_pop = cumsum(POP_EST)) |>
mutate(pop_class = ifelse(cum_pop < half_pop,
"half of population",
"1/2 of population"))
# lat_min <- 25.5
# lat_max <- 48.5
# long_min <- -124
# long_max <- -69
countries_df |>
ggplot() +
geom_sf(aes(fill = pop_class), color = "white") +
labs(title = "The World's Population In Two Halves",
subtitle = "30 Day Map Challenge, Day 25: Two Colors",
caption = "Derek Sollberger") +
# https://www.sessions.edu/color-calculator/
scale_fill_manual(values = c("#0F8040", "#801c0F")) +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom",
legend.title = element_blank(),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title = element_text(color = "#801c0F", size = 20),
plot.subtitle = element_text(color = "#0F8040", size = 15),
plot.caption = element_text(color = "#801c0F", hjust = 0, size = 10))
# lat_min <- 25.5
# lat_max <- 48.5
# long_min <- -124
# long_max <- -69
countries_df |>
ggplot() +
geom_sf(aes(fill = pop_class), color = "white") +
labs(title = "The World's Population In Two Halves",
subtitle = "30 Day Map Challenge, Day 25: Two Colors",
caption = "Derek Sollberger") +
# https://www.sessions.edu/color-calculator/
scale_fill_manual(values = c("#0F8040", "#801c0F")) +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom",
legend.title = element_blank(),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title = element_text(color = "#801c0F",
hjust = 0.5,
size = 20),
plot.subtitle = element_text(color = "#0F8040",
hjust = 0.5,
size = 15),
plot.caption = element_text(color = "#801c0F",
hjust = 0.5,
size = 10))
countries_df |>
ggplot() +
geom_sf(aes(fill = pop_class), color = "white") +
labs(title = "The World's Population In Two Halves",
subtitle = "30 Day Map Challenge, Day 25: Two Colors",
caption = "Derek Sollberger") +
# https://www.sessions.edu/color-calculator/
scale_fill_manual(values = c("#0F8040", "#801c0F")) +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom",
legend.title = element_blank(),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title = element_text(color = "#801c0F",
hjust = 0.5,
size = 20),
plot.subtitle = element_text(color = "#0F8040",
hjust = 0.5,
size = 15),
plot.caption = element_text(color = "#801c0F",
hjust = 0.5,
size = 10))
# lat_min <- 25.5
# lat_max <- 48.5
# long_min <- -124
# long_max <- -69
countries_df |>
ggplot() +
geom_sf(aes(fill = pop_class), color = "white") +
labs(title = "The World's Population In Two Halves",
subtitle = "30 Day Map Challenge, Day 25: Two Colors",
caption = "Derek Sollberger") +
# https://www.sessions.edu/color-calculator/
scale_fill_manual(values = c("#0F8040", "#801c0F")) +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom",
legend.text = element_text(size = 30),
legend.title = element_blank(),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title = element_text(color = "#0F8040",
hjust = 0.5,
size = 30),
plot.subtitle = element_text(color = "#801c0F",
hjust = 0.5,
size = 20),
plot.caption = element_text(color = "#801c0F",
hjust = 0.5,
size = 10))
countries_df |>
ggplot() +
geom_sf(aes(fill = pop_class), color = "white") +
labs(title = "The World's Population In Two Halves",
subtitle = "30 Day Map Challenge, Day 25: Two Colors",
caption = "Derek Sollberger") +
# https://www.sessions.edu/color-calculator/
scale_fill_manual(values = c("#0F8040", "#801c0F")) +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom",
legend.text = element_text(size = 30),
legend.title = element_blank(),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title = element_text(color = "#0F8040",
hjust = 0.5,
size = 30),
plot.subtitle = element_text(color = "#801c0F",
hjust = 0.5,
size = 20),
plot.caption = element_text(color = "#801c0F",
hjust = 0.5,
size = 10))
View(countries_df)
